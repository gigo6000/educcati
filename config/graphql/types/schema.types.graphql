type Query {
  course(id: ID!): Course
}

type Course {
  id: ID!
  name: String!
  slug: String
  isPublished: Boolean
  progress: Int
  sections(
     id: ID
  ): [Section]
}

type Section {
  id: ID!
  name: String!
  sort: Int
  lessons (
      id: ID
  ): [Lesson]
}

type Lesson {
  id: ID!
  name: String!
  slug: String
  videoUrl: String
  duration: String
  sort: Int
  isCompleted: Boolean
  isPublished: Boolean
  textTracks (
      id: ID
  ): [TextTrack]
}

type TextTrack {
  id: ID!
  source: String!
  language: String!
  label: String!
  type: String!
}

type Mutation {
  createCourse(name: String!, slug: String, progress: Int): Course!
  updateCourse(id: ID!, name: String, slug: String, progress: Int): Course!
  deleteCourse(id: ID!): Boolean
  createSection(name: String!, sort: Int, courseId: ID!): Section!
  updateSection(id: ID!, name: String, sort: Int, courseId: ID): Section!
  deleteSection(id: ID!): Boolean
  createLesson(name: String!, slug: String, videoUrl: String, duration: String, isCompleted: Boolean, sort: Int, sectionId: ID!): Lesson!
  updateLesson(id: ID!, name: String, slug: String, videoUrl: String, duration: String, isCompleted: Boolean, sort: Int, sectionId: ID): Lesson!
  deleteLesson(id: ID!): Boolean
}
